{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","List","className","ListItem","ListItemAvatar","ListItemText","primary","secondary","todo","onClick","e","collection","doc","id","delete","App","useState","todos","setToDos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAiBqBA,EAdAC,IAASC,cAAc,CACpCC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAIIC,Y,yBCQZC,MAhBf,SAAcC,GACV,OACI,eAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,IAGI,cAACC,EAAA,EAAD,CAAcC,QAAQ,UAAUC,UAAWP,EAAMQ,KAAKA,UAE1D,cAAC,IAAD,CAAmBC,QAAS,SAAAC,GAAC,OAAItB,EAAGuB,WAAW,SAASC,IAAIZ,EAAMQ,KAAKK,IAAIC,gBCqDxEC,MA5Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KA8Bb,OAxBFC,qBAAU,WAERjC,EAAGuB,WAAW,SAASW,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DN,EAASM,EAASC,KAAKC,KAAI,SAAAd,GAAG,MAAG,CAACC,GAAGD,EAAIC,GAAIL,KAAKI,EAAIe,OAAOnB,eAE9D,IAoBC,sBAAKN,UAAU,MAAf,UACE,oEACN,iCACM,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,6CACA,cAACC,EAAA,EAAD,CACEC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAWb,EAASa,EAAMC,OAAOH,aAI/C,cAACI,EAAA,EAAD,CACEC,UAAWjB,EACXV,QA5BU,SAACwB,GACfA,EAAMI,iBAGPjD,EAAGuB,WAAW,SAAS2B,IAAI,CACzB9B,KAAKW,EACLoB,UAAUlD,IAASS,UAAU0C,WAAWC,oBAEzCvB,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAS,KAoBLsB,QAAQ,YACRC,MAAM,UAJR,2BASA,6BACG1B,EAAMS,KAAI,SAAClB,GAAD,OACT,cAAC,EAAD,CAAMA,KAAMA,aCjDPoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80ac921b.chunk.js","sourcesContent":["\n  import firebase from 'firebase';\n\n  const firebaseApp =firebase.initializeApp({\n        apiKey: \"AIzaSyCdcHQ7Wl96MyhuAA5pxtuizwqMlOu5KKQ\",\n        authDomain: \"todolist-harshit.firebaseapp.com\",\n        projectId: \"todolist-harshit\",\n        storageBucket: \"todolist-harshit.appspot.com\",\n        messagingSenderId: \"1053898694509\",\n        appId: \"1:1053898694509:web:fba843a2df10c5aa820464\",\n        measurementId: \"G-K367HH4DGE\"\n      });\n \n\n      const db=firebaseApp.firestore();\n     \n\n      export default db;","import { ListItemText,List,ListItem, ListItemAvatar, Button} from '@material-ui/core'\nimport React from 'react'\nimport './Todo.css';\nimport db from './firebase';\nimport  DeleteForeverIcon  from '@material-ui/icons/DeleteForever';\n\nfunction Todo(props) {\n    return (\n        <List className=\"to_dolist\">\n            <ListItem>\n            <ListItemAvatar>\n\n            </ListItemAvatar>\n                <ListItemText primary=\"Todo...\" secondary={props.todo.todo}/>\n            </ListItem>\n            <DeleteForeverIcon onClick={e => db.collection('todos').doc(props.todo.id).delete()}/>\n           \n           \n        </List>\n    )\n}\n\nexport default Todo\n","import React, { useState,useEffect } from \"react\";\nimport { Button, InputLabel,FormControl,Input } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Todo from './Todo';\n\nimport firebase from 'firebase';\nimport db from \"./firebase\";\n\nfunction App() {\n  const [todos, setToDos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n\n// when the app loads ,we need to listen to database and fetch todos as added/waitForElementToBeRemoved. \nuseEffect(() => {\n  // works when app.js loads \n  db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n    setToDos(snapshot.docs.map(doc=>({id:doc.id, todo:doc.data().todo})))\n  })\n}, []);\n\n\n\n  // on clicking it should add item to settodos\n  const addTodo = (event) => {\n    event.preventDefault(); //will stop the refresh of page.\n\n    // add item to the firebase databse \n   db.collection('todos').add({\n     todo:input,\n     timestamp:firebase.firestore.FieldValue.serverTimestamp()\n   })\n    setToDos([...todos, input]);\n    setInput(\"\");\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>ðŸ”—TO DO LISTðŸ”—</h1>\n<form>\n      <FormControl>\n        <InputLabel>ðŸ“ŒWrite a todo task.</InputLabel>\n        <Input\n          value={input}\n          onChange={(event) => setInput(event.target.value)}\n        />\n      </FormControl>\n\n      <Button\n        disabled={!input}\n        onClick={addTodo}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Add Items!\n      </Button>\n</form>\n      <ul>\n        {todos.map((todo) => (\n          <Todo todo={todo}/>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}